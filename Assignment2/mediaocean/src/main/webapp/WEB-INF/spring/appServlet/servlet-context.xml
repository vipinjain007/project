<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	

	
	<!-- Enables the explicit support for annotation-driven MVC controllers 
		(i.e. @RequestMapping, @Controller, although support for those is the default 
		behaviour), as well as adding support for declrative validation via @Valid 
		and message body marshalling with @RequestBody/ResponseBody. -->		
	<mvc:annotation-driven />

	<!-- Enables the implicitly support for general annotations such as @Required, 
		@Autowired, @PostConstruct -->
	<context:annotation-config />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- load properties file in app context -->
	<context:property-placeholder location="classpath:resources.properties" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mediaocean.rest" />
	
	<beans:bean id="jacksonMessageChanger" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>

	<beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<util:list id="beanList">
				<beans:ref bean="jacksonMessageChanger" />
			</util:list>
		</beans:property>
	</beans:bean>
	
	<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/*.html"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.js.gzip"/>
            <mvc:exclude-mapping path="/**/*.js.map"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/*.ico"/>
            <mvc:exclude-mapping path="/**/*.json"/>
            <mvc:exclude-mapping path="/**/*.ttf"/>
            <mvc:exclude-mapping path="/**/*.woff"/>
            <mvc:exclude-mapping path="/**/*.eot"/>
            <mvc:exclude-mapping path="/**/*.svg"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.xml"/>
            <mvc:exclude-mapping path="/**/*.map"/>
          

           <beans:bean class="com.mediaocean.rest.security.RequestInterceptor">
            <!--   <beans:property name="specialUrls">
                    <list>
                        <value>/login</value>
                    </list>
                </beans:property>  -->
            </beans:bean>
        </mvc:interceptor>
    </mvc:interceptors>
	
</beans:beans>
